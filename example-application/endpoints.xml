  <endpoint-folder multiple-value-separator=",">
      
    <endpoint-folder>
  
      <!-- to make the hash -->
      <parameter name="param-in-hash"/>
      
      <!-- other params supplied by the client e.g. a <form> -->
      <parameter name="invoice-number" default-value="123"/>
      <parameter name="email-address" default-value=""/>
  
      <!-- other params -->
      <parameter name="withouthyphen" default-value="abc"/>
      <parameter name="catalogue" default-value="example-catalogue"/>
      <parameter name="param.with.dots" default-value="dots"/>
  
      <endpoint name="send-email">
        <include-in-hash><parameter name="param-in-hash"/></include-in-hash>
        <parameter name="dont-send" default-value="false"/>
        <task class="endpoints.task.HttpRequestTask">
          <url>https://sandbox.digitalhub.washtec.com/v2/api-docs</url>
          <output-intermediate-value name="swagger-host" jsonpath="$.host" regex="[a-z.]+"/>
        </task>
        <task class="endpoints.task.HttpRequestTask">
          <input-intermediate-value name="swagger-host"/>
          <url>https://${swagger-host}/v2/api-docs</url>
          <output-intermediate-value name="swagger-version" jsonpath="$.swagger"/>
        </task>
        <task class="endpoints.task.EmailTask" if="${dont-send}" notequals="true">
          <input-intermediate-value name="swagger-version"/>
          <from>endpoints@example.com</from>
          <to>${email-address}</to>
          <to>${email-address}</to>
          <subject>Email from Endpoints to: ${email-address} (Dots are ${param.with.dots})</subject>
          <body-transformation name="produce-text"/>
          <body-transformation name="produce-html-email-body"/>
          <attachment-static filename="static-subdirectory/spheres.png"/>
          <attachment-transformation name="produce-pdf" if="foo" equals="foo" filename="invoice-${invoice-number}.pdf"/>
          <attachment-transformation name="produce-pdf" if="foo" equals="bar" filename="DO-NOT-INCLUDE-${invoice-number}.pdf"/>
          <attachments-from-request-file-uploads/>
        </task>
        <task class="endpoints.task.HttpRequestTask">
          <url>https://www.dailymail.co.uk/home/index.html</url> <!-- slow, no output/input variables -->
        </task>
      </endpoint>
      
      <endpoint name="redirect">
        <include-in-hash/>
        <success>
          <redirect-to>http://${email-address}/</redirect-to>
          <redirect-prefix-whitelist-entry>http://www.google.com</redirect-prefix-whitelist-entry>         
        </success>
      </endpoint>
  
      <endpoint name="http-request">
        <include-in-hash><parameter name="param-in-hash"/></include-in-hash>
        <task class="endpoints.task.HttpRequestTask">
          <url>https://www.databasesandlife.com/endpoints-HttpRequestTask</url>
        </task>
      </endpoint>
  
      <endpoint name="json">
        <parameter name="written-to-by-parameter-transformation-output" default-value="from-endpoints-xml"/>
        <parameter name="value-of-param-via-xml-from-url-identity"/>
        <parameter name="value-of-unknown-param-via-xml-from-url-identity"/>
        <include-in-hash><parameter name="param-in-hash"/></include-in-hash>
        <parameter-transformation xslt="add-one-param.xslt">
          <xml-from-application file="xml-subdirectory/spheres.fo"/>
          <xml-from-url tag="from-xml-from-url">
            <url>https://postman-echo.com/get</url>
            <get-parameter name="param">${param-in-hash}</get-parameter>
            <get-parameter name="unknown-param">${lkdfjkjjjfgkjerlkcoi}</get-parameter>
          </xml-from-url>
        </parameter-transformation>
        <task class="endpoints.task.HttpRequestTask" id="t">
          <url>https://sandbox.digitalhub.washtec.com/v2/api-docs</url>
          <output-intermediate-value name="swagger-version" jsonpath="$.swagger" regex="[\d.]+"/>
        </task>
        <task class="endpoints.task.HttpRequestTask">
          <after task-id="t"/>
          <url>https://sandbox.digitalhub.washtec.com/v2/api-docs</url>
        </task>
        <task class="endpoints.task.RequestLogExpressionCaptureTask" key="inv" value="invoice# is '${invoice-number}'" />
        <success if="${email-address}" equals="y,email-address">
          <input-intermediate-value name="swagger-version"/>
          <forward-to-endpoint endpoint-name="json2">
            <input-parameter name="param-in-hash">inner value from json</input-parameter>
          </forward-to-endpoint>
        </success>
        <error>
          <response-transformation name="produce-error"/>
        </error>
      </endpoint>
      
      <endpoint name="json2">
        <task class="endpoints.task.RequestLogExpressionCaptureTask" key="foo" value="bar" />
        <success>
          <forward-to-endpoint endpoint-name="json3"/>
        </success>
      </endpoint>

      <endpoint name="json3">
        <parameter name="user-agent"/>
        <parameter name="referrer"/>
        <parameter name="base-url"/>
        <parameter-transformation xslt="add-values-from-parameter-transformation-input.xslt"/>
        <task class="endpoints.task.CreateShortLinkToEndpointTask" expires-in-minutes="1440"
              destination-endpoint-name="json4" output-intermediate-value="short-code-link"/>
        <success>
          <input-intermediate-value name="short-code-link"/>
          <response-transformation name="produce-short-code-to-endpoint"/>
        </success>
      </endpoint>

      <endpoint name="json4">
        <parameter name="user-agent"/>
        <parameter name="referrer"/>
        <parameter name="base-url"/>
        <parameter-transformation xslt="add-values-from-parameter-transformation-input.xslt"/>
        <success>
          <response-transformation name="produce-json"/>
        </success>
      </endpoint>
      
      <endpoint name="pdf">
        <include-in-hash><parameter name="param-in-hash"/></include-in-hash>
        <success>
          <response-transformation download-filename="invoice-${invoice-number}.pdf" name="produce-pdf"/>
        </success>
        <error>
          <response-transformation name="produce-error"/>
        </error>
        <task class="endpoints.task.EmailTask" if="${email-address}" notequals="">
          <from>endpoints@example.com</from>
          <to>${email-address}</to>
          <to>${email-address}</to>
          <subject>Email from Endpoints to: ${email-address}</subject>
          <body-transformation name="produce-text"/>
          <body-transformation name="produce-html"/>
          <attachment-static filename="static-subdirectory/spheres.png"/>
          <attachment-transformation name="produce-pdf" if="foo" equals="foo" filename="invoice-${invoice-number}.pdf"/>
          <attachment-transformation name="produce-pdf" if="foo" equals="bar" filename="DO-NOT-INCLUDE-${invoice-number}.pdf"/>
          <attachments-from-request-file-uploads/>
        </task>
      </endpoint>

      <endpoint name="from-static">
        <success>
          <response-from-static filename="static-subdirectory/spheres.png" download-filename="spheres2.png"/>
        </success>
      </endpoint>

      <endpoint name="from-url">
        <success>
          <response-from-url download-filename="dl.html">
            <url>https://www.databasesandlife.com/</url>
          </response-from-url>
        </success>
        <error>
          <response-from-static filename="static-subdirectory/spheres.png"/>
        </error>
      </endpoint>

    </endpoint-folder>
      
    <endpoint name="html-content">
      <success>
        <response-transformation name="produce-html"/>
      </success>
      <error>
        <response-transformation name="produce-error"/>
      </error>
    </endpoint>
       
    <endpoint name="form">
      <success>
        <response-transformation name="produce-form"/>
      </success>
      <error>
        <response-transformation name="produce-error"/>
      </error>
    </endpoint>
 </endpoint-folder>
